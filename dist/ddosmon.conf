/* ddosmon example config */

/*
 * If you will be nullrouting using a cisco or brocade device,
 * use this module.
 */
module "actions/nullroute" {
	/* default community tag to use for nullroutes. */
	nullroute_tag = 666;

	/*
	 * targets define endpoints to distribute commands to.
	 */
	target "67.202.104.1" {
		/* either ssh or telnet. */
		protocol = ssh;
		port = 22;

		enable_password = "omfgsex";

		user = "nenolod";
		pass = "leetaxx";

		#pubkey = "/home/nenolod/.ssh/id_rsa.pub";
		#privkey = "/home/nenolod/.ssh/id_rsa";

		/* cisco-ios or vyatta are presently supported. */
		type = "cisco-ios";
	};

	/*
	 * additional targets can be added... target "..." {};
	 */
};

module "actions/email" {
	from = "alerts@nenolod.net";
	to = "noc@nenolod.net";
	sendmail = "/usr/sbin/sendmail";
};

/*
 * If you want to run custom scripts, you can define them as actions.
 * These scripts will be run with $argv[1] being the IP address to nullroute.
 *
 * actions defined by an action{} block will create custom actions you can refer to
 * in your configuration for core/triggers.
 *
 * path /module['actions/customscript']/action[...]/ban_program:
 *      program to run when banning an ip
 *
 * path /module['actions/customscript']/action[...]/unban_program:
 *      program to run when unbanning an ip
 */
module "actions/customscript" {
	action "customnull" {
		ban_program = "/usr/local/bin/null_ip";
		unban_program = "/usr/local/bin/unnull_ip";
	};
};

/* you need to delete one of these blocks.
 *
 * if the device is running in passthrough mode, then use source/pcap.
 * otherwise, if you're receiving a netflow v5/v9 feed, use source/netflow.
 */
module "source/pcap" {
	pcap_string = "ip";
	interface = "eth0";
	promisc;
};

// module "source/netflow" {
//	bind_port = 9996;
// };

/* this module allows you to define your trigger policy. */
module "core/triggers" {
	// the number of seconds that between triggering an action and triggering
	// the reversion of said action.  in other words, the expiry for nullroutes.
	// This overrides per-trigger expiries (that is, if it is sooner than the
	// per-trigger expiries, it will expire them first)
	expiry = 300;

	/* trigger a nullroute if a UDP flood larger than 120mbps occurs. */
	trigger {
		protocol = udp;
		target_mbps = 120;

                // Expire this trigger - only has effect if sooner than the "global"
                // expiry. Left undefined, it will have no effect.
		expiry = 150;

		actions {
			nullroute;
			email;
		};
	};

	/* trigger a nullroute if an ICMP flood larger than 120mbps occurs. */
	trigger {
		protocol = icmp;
		target_mbps = 120;
		expiry = 150;
		actions {
			nullroute;
			email;
		};
	};

	/* TCP synfloods are more about PPS, so we trigger at 350000 PPS, the size
	 * of a typical 200mbps synflood.
	 */
	trigger {
		protocol = tcp;
		target_pps = 350000;
		expiry = 150;
		actions {
			nullroute;
			email;
		};
	};
};

/* if you don't want to trigger on outbound ddos problems,
 * set up source exempts here...
 *
 * you can also exempt a CIDR mask from being triggered upon if it
 * is being ddosed.
 *
 * if you do not exempt your sources, then if they start attacking
 * an IP, it will be nullrouted inside your network to prevent your
 * ddos traffic from reaching the destination.  as such, it may be
 * desirable to set up appropriate BGP filters on your nullroute setup
 * to prevent you from nullrouting ips you do not own.
 */
module "core/exempts" {
	"67.202.104.0/22" src;
	"69.162.132.0/22" src;
};

